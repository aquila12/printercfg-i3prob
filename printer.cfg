# This file contains common pin mappings for the Geeetech GT2560
# board. GT2560 board uses a firmware compiled for the AVR
# atmega2560.

# See docs/Config_Reference.md for a description of parameters.

# Pinout: https://raw.githubusercontent.com/Geeetech3D/Diagram/master/GT2560_V3.0_SCH.pdf

[stepper_x]
step_pin: PA3
dir_pin: !PA1
enable_pin: !PA5
microsteps: 16
# 20T * 2mm
rotation_distance: 40
endstop_pin: ^PA0
# High-endstop is PA2
position_endstop: -12
position_min: -12
position_max: 195
homing_speed: 50
second_homing_speed: 10

[stepper_y]
step_pin: PC6
dir_pin: !PC4
enable_pin: !PA7
microsteps: 16
# 20T * 2mm
rotation_distance: 40
endstop_pin: ^PA4
# High-endstop is PA6
position_endstop: 0
position_min: 0
position_max: 200
homing_speed: 50
second_homing_speed: 10

[stepper_z]
step_pin: PC0
dir_pin: PG2
enable_pin: !PC2
microsteps: 16
# T8 leadscrew
rotation_distance: 8
endstop_pin: ^PC7
# High-endstop is PC5 (borrowed for filament runout sensor)
position_min: 0
position_max: 195
homing_speed: 10
second_homing_speed: 2

[extruder]
step_pin: PL6
dir_pin: !PL4
enable_pin: !PG0
microsteps: 16
rotation_distance: 32.736
nozzle_diameter: 0.4
filament_diameter: 1.750
heater_pin: PE4
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK0
min_temp: 0
max_temp: 250

[heater_bed]
heater_pin: PG5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK2
min_temp: 0
max_temp: 120

[fan]
pin: PH4

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0

[printer]
kinematics: cartesian
max_velocity: 250
max_accel: 2000
# NB Z resonates somewhere above ~2200mm/s
max_z_velocity: 35
max_z_accel: 500

[display]
lcd_type: hd44780
rs_pin: PD1
e_pin: PH0
d4_pin: PH1
d5_pin: PD0
d6_pin: PE3
d7_pin: PH3
encoder_pins: ^PG1, ^PL7
click_pin: ^!PD2

[safe_z_home]
home_xy_position: 10,10
#z_hop: 5

[skew_correction]

# Filament Switch Sensor. Support for filament insert and runout
# detection using a switch sensor, such as an endstop switch.
[filament_switch_sensor runout_sensor]
# Connected to Z Max Endstop connector
switch_pin: ^!PC5
pause_on_runout: True
#runout_gcode:
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
#event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if Octoprint exhibits strange pause behavior.
#   Default is 0.5 seconds.

# Support arcs in 1mm segments
[gcode_arcs]
resolution: 1.0

# Fake temperature sensor for power supply input voltage
[adc_temperature input_voltage]
temperature1: 0
voltage1: 0
# 47k - 10k potential divider
temperature2: 25
voltage2: 4.386

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 21.573
#*# pid_ki = 0.836
#*# pid_kd = 139.147
#*#
#*# [skew_correction skew_profile_1]
#*# xy_skew = 0.014323103505
#*# xz_skew = 0.0
#*# yz_skew = 0.0
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 63.635
#*# pid_ki = 1.169
#*# pid_kd = 866.234
#*#
#*# [stepper_z]
#*# position_endstop = 0.375
